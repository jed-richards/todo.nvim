-- 1/27/2023 --
{
    1 : Finish writing code from online and understand what it is doing.

    2 : Look into buffers and windows. Learn the basic vim navigation of them. 

    3 : Make my own implementation of opening and closing windows and the 
        overall look of them.

    4 : Look into this 

        timeHMS _ `[all]`
        ───────────────────────────────────────────────────
        I give you back the time (H:M:S)

        ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}
}


-- 1/29/2023 --
{
    1 : Fix set_mappings() functions (set keymapping <leader>td to open todo 
        window)

    2 : Make a close window function and set key map to 'q' while in buffer 
        (nvim_buf_set_keymap())

    3 : Set up rtp so it knows to search here without using 
        'vim --cmd 'set rtp+=./'

    4 : Look into nerdfonts so i can make the border 'pretty'
}


-- 1/31/2023 --
{
    1 : Still need to work on keymaps with (set_mappings())
}


-- 2/7/2023 --
{
    1 : Idea for project and file storing -> crawl backwards in directory
        looking for .todo directory. This will allow for nesting. 
}


-- 2/12/2023 --
{
    1 : I need to make it so when I open a window with open_window() that I am
        able to have a variable with the path to the current directory and file
        of the previous buffer that the function was called in. 

    2 : Figure out how to make a directory and file.
}


-- 2/16/2023 --
{
    1 : I need to figure out how I want to make a file attach to a buffer. Maybe
        if the file doesn't exist then I make it and read from it and write to
        it from the buffer, like python with open(fileName, "r/w") and write it
        to the buffer. Idk just an idea.
}


-- 2/20/2023 --
{
    1 : use vim.fn.isdirectory('.todo') to check if .todo/ exists

    2 : use vim.fn.getcwd() to get the path the cwd

    3 : use vim.fn.mkdir() to make a new directory

    4 : continue looking in help/docs for vim.fn and vim-function
}


-- 2/21/2023 --
{
    1 : Make window.lua into a module that can be created and called in 
        todo.lua

    2 : Maybe have to use vim.fn.chdir() to change cwd
}


-- 2/26/2023 --
{
    1 : I might want to make the todo.txt be in JSON format so that when I want
        to make buttons to check off items that I can delete the Key/Value pair
        from the dictionary.

    2 : I need to make keymappings while in the todo buffer that allows quiting
        and etc.
}
